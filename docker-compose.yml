version: '2.2'

x-erigon-service: &default-erigon-service
  image: thorax/erigon:v2022.08.02
  user: 0:0
  volumes:
    - .data:/data
    - .jwtsecret:/jwtsecret
  restart: unless-stopped
  mem_swappiness: 0

x-lighthouse-service: &default-lighthouse-service
  image: sigp/lighthouse:latest-modern
  user: 0:0
  volumes:
    - .lighthouse:/root/.lighthouse
    - ./validator_keys:/root/validator_keys
    - .jwtsecret:/jwtsecret
  environment:
    - FEE_RECIPIENT="${FEE_RECIPIENT}"
  restart: unless-stopped
  mem_swappiness: 0

services:

  erigon:
    <<: *default-erigon-service
    ports:
      - "30304:30304/tcp"
      - "30304:30304/udp"
    # for merge add --authrpc.addr=0.0.0.0 --authrpc.vhosts=*
    command: >-
      erigon
      --datadir=/data --port=30304
      --metrics --metrics.addr=0.0.0.0 --metrics.port=6060
      --private.api.addr=0.0.0.0:9090
      --authrpc.jwtsecret=/jwtsecret/jwt.hex
      --authrpc.vhosts="*"
      --authrpc.addr=0.0.0.0

  rpcdaemon:
    <<: *default-erigon-service
    # Use erigon's PID namespace. It's required to open Erigon's DB from
    # another process (RPCDaemon local-mode)
    pid: service:erigon
    ports:
      - "8545:8545"
    command: >-
      rpcdaemon
      --datadir=/data
      --private.api.addr=erigon:9090
      --txpool.api.addr=erigon:9090
      --http.addr=0.0.0.0 --http.vhosts="*" --http.corsdomain="*"
      --http.api=eth,erigon,web3,net,debug,trace,txpool --ws

  beacon:
    <<: *default-lighthouse-service
    depends_on:
      - erigon
    ports:
      - "9009:9009/tcp"
      - "9009:9009/udp"
    command: >-
      lighthouse --network mainnet beacon
        --port 9009
        --staking --validator-monitor-auto
        --http --http-address 0.0.0.0 --http-port 5052 --http-allow-origin "*"
        --metrics --metrics-address 0.0.0.0 --metrics-port 5053
        --suggested-fee-recipient $FEE_RECIPIENT
        --execution-endpoint http://erigon:8551
        --execution-jwt /jwtsecret/jwt.hex

  prometheus:
    image: prom/prometheus
    command: --log.level=warn --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - "9090:9090"
    volumes:
      - ./cmd/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - "3030:3000"
    volumes:
      - ./cmd/prometheus/grafana.ini:/etc/grafana/grafana.ini
      - ./cmd/prometheus/datasources:/etc/grafana/provisioning/datasources
      - ./cmd/prometheus/dashboards:/etc/grafana/provisioning/dashboards
      - grafana:/var/lib/grafana
    restart: unless-stopped

volumes:
  prometheus:
  grafana:
